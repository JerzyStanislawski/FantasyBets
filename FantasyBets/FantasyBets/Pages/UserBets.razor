@page "/UserBets/{userId}"
@using FantasyBets.Components
@using FantasyBets.Data
@using FantasyBets.Extensions
@using FantasyBets.Services

@inject UserManager<FantasyUser> UserManager;
@inject IDbContextFactory<DataContext> DbContextFactory;

<PageTitle>Bets - @userName</PageTitle>

@if (loaded)
{
    <GamesWithBets UserId="@UserId"
               IsCurrentUser="@false"
               BetSelections="@betSelections" />
}

@code {
    [Parameter]
    public string UserId { get; set; } = null!;

    private IEnumerable<BetSelection>? betSelections;
    private string userName = null!;
    private bool loaded = false;

    protected async override Task OnInitializedAsync()
    {
        var user = await UserManager.FindByIdAsync(UserId);

        using var dbContext = await DbContextFactory.CreateDbContextAsync();
        var dbUser = dbContext.Users
            .Include(x => x.BetSelections)
            .ThenInclude(x => x.Game)
            .ThenInclude(x => x.Round)
            .ThenInclude(x => x.Season)
            .First(x => x.Id == user.Id);

        betSelections = dbUser.BetSelections?.Where(x => x.Game.Started());
        userName = user.Email;

        loaded = true;
    }
}
